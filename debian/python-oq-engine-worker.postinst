#!/bin/sh
# postinst script for python-oq-engine-standalone
#
# see: dh_installdeb(1)

#set -x
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# load debconf suite
. /usr/share/debconf/confmodule

GEM_TB="	"
GEM_DEB_PACKAGE="python-oq-engine-worker"
PG_CONF="/etc/postgresql/9.1/main/postgresql.conf"
SDIR=/etc/openquake
IDIR=/usr/share/pyshared/openquake/engine

if ps ax | grep -v grep | grep -q -w '/usr/bin/python -m celery.bin.celeryd'; then
    echo
    echo "You must stop celeryd daemon to upgrade $GEM_DEB_PACKAGE"
    echo
    db_stop
    exit 1
fi

chown -R root.openquake $SDIR

# update host configuration
db_get ${GEM_DEB_PACKAGE}/master-address || true
host_address="$RET"
sed -s "s/^host[ $GEM_TB]*=.*/host = $host_address/g" /etc/openquake/openquake.cfg

#
# does a bad explicit configuration exist?
if grep -q '^[ 	]*standard_conforming_strings[ 	]*=' "$PG_CONF" ; then
    if grep -q '^[ 	]*standard_conforming_strings[ 	]*=[ 	]*on' "$PG_CONF" ; then
        db_get ${GEM_DEB_PACKAGE}/override-psql-std-conf-str || true
        if [ "$RET" = "true" ]; then
            if [ ! -f "${PG_CONF}.${GEM_DEB_PACKAGE}.orig" ]; then
                cp "$PG_CONF" "${PG_CONF}.${GEM_DEB_PACKAGE}.orig"
            fi
            sed -i 's/^[ 	]*standard_conforming_strings[ 	]*=.*/# ADDED BY python-oq-engine\nstandard_conforming_strings = off/g' "$PG_CONF"
        fi
    fi
elif grep -q  '^[ 	]*#[ 	]*standard_conforming_strings[ 	]*=' "$PG_CONF" ; then
    if [ ! -f "${PG_CONF}.${GEM_DEB_PACKAGE}.orig" ]; then
        cp "$PG_CONF" "${PG_CONF}.${GEM_DEB_PACKAGE}.orig"
    fi
    sed -i 's/^[ 	]*#[ 	]*standard_conforming_strings[ 	]*=.*/# ADDED BY python-oq-engine\nstandard_conforming_strings = off/g' "$PG_CONF"
else
    if [ ! -f "${PG_CONF}.${GEM_DEB_PACKAGE}.orig" ]; then
        cp "$PG_CONF" "${PG_CONF}.${GEM_DEB_PACKAGE}.orig"
    fi
    echo "# ADDED BY python-oq-engine" >>  "$PG_CONF"
    echo "standard_conforming_strings = off" >>  "$PG_CONF"
fi

# if celeryd default file exists then extract user and group and create them if not already exists
if [ -f /etc/default/celeryd ]; then
    . /etc/default/celeryd

    if [ $(cat /etc/passwd | grep "^$CELERYD_USER:" | wc -l) -eq 0 ]; then
        adduser --system "$CELERYD_USER"
    fi
    if [ $(cat /etc/group | grep "^$CELERYD_GROUP:" | wc -l) -eq 0 ]; then
        addgroup --system "$CELERYD_GROUP"
    fi
fi

# Start celeryd
/etc/init.d/celeryd start

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop
exit 0
