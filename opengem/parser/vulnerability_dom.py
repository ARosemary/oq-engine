# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4

"""A DOM version of the vulnerability model parser,
that takes into account the really small size of this input file.

"""

from lxml import etree
from ordereddict import OrderedDict

from opengem import state
from opengem import shapes

STATE = state.STATE

EMPTY_CODE = 'EMPTY'
STATE['vulnerability_curves'] = {}
STATE['vulnerability_curves'][EMPTY_CODE] = shapes.EMPTY_CURVE

def load_vulnerability_model(path):
    vulnerability_model = etree.parse(path).getroot()
    
    for vulnerability_function in vulnerability_model:
        # parse values
        intensity_measure_values = map(
                float, vulnerability_function[0].text.strip().split())
                
        loss_ratio_values = map(
    	        float, vulnerability_function[1].text.strip().split())
    	        
        coefficient_variation_values = map(
    	        float, vulnerability_function[2].text.strip().split())

        # convert raw values into our object model
        curve_data = OrderedDict()
        pairs = zip(loss_ratio_values, coefficient_variation_values)
        
        for idx, IML in enumerate(intensity_measure_values):
            curve_data['%s' % IML] = pairs[idx]

        STATE['vulnerability_curves'][vulnerability_function.attrib['ID']] = \
                shapes.Curve(curve_data)
