#!/bin/bash
# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4

if [ $GEM_SET_DEBUG ]; then
    set -x
fi
set -e

help() {
    cat <<HSD
The command line arguments are as follows:

    -v, --verbose        Be more verbose
    -s, --skip-new       The new database will not be created
    -y, --yes            Don't pause for user input, assume yes on all questions
    -h, --help           This help
HSD
    exit 0
}

bold=`tput bold`
normal=`tput sgr0`
oq_create_db='oq_create_db'
oq_engine='oq-engine'
database='openquake2'

sudo -u postgres command -v oq_create_db &> /dev/null || {
    if [ -x "./${oq_create_db}" ]; then
        oq_create_db="./${oq_create_db}"
    else
        echo -e "!! Can't find oq_create_db. Aborting." >&2
        exit 1
    fi
}

command -v oq-engine &> /dev/null || {
    if [ -x "./${oq_engine}" ]; then
        oq_engine="./${oq_engine}"
    else
        echo -e "!! Can't find oq-engine. Aborting." >&2
        exit 1
    fi
}


while (( "$#" )); do
    case "$1" in
        '--verbose' | '-v')
            verbose=y
            shift ;;
        '--yes' | '-y')
            force=y
            shift ;;
        '--skip-new' | '-s')
            skipnew=y
            shift ;;
        '--help' | '-h' )
            help
            shift ;;
    esac
done

echo ''
echo "!! ${bold}This script is going to remove the OpenQuake Engine data${normal}"
echo '!!'
echo -e "!! \t*  Make sure no calculations are running"
echo -e "!! \t*  Make sure Celery is stopped"
echo -e "!! \t*  The OpenQuake Engine datastores located in /home/[user]/oqdata will be removed"
echo -e "!! \t*  The OpenQuake Engine database will be dropped"
echo -e "!! \t   All the old data contained will be lost"
if [ -z $skipnew ]; then
    echo -e "!! \t*  A new OpenQuake Engine database will be created"
fi
echo '!!'
if [ $force ]; then
    for i in {5..1}; do
        echo -ne "\r!! Press CTRL-C to cancel the operation within ${i} seconds"
        sleep 1
    done
    answer="y"
else
    echo -n "!! Do you want to proceed? (y/n)"
    read -n 1 -s answer
fi
echo ''
echo ''

if [[ "$answer" == "y" ]]; then
    if sudo -u postgres psql $database -c '' &> /dev/null; then
        sudo -u postgres dropdb $database
        echo " * Database dropped"
    fi
    sudo find /home -maxdepth 2 -type d -name "oqdata" -exec rm -Rf '{}' \;
    echo " * Datastores cleaned"
    if [ -z $skipnew ]; then
        out=$(sudo -u postgres $oq_create_db)
        echo " * New database created"
        if [ $verbose ]; then >&2 echo "$out"; fi
        out=$(${oq_engine} --upgrade-db --yes 2>&1)
        echo " * New database initializated"
        if [ $verbose ]; then >&2 echo "$out"; fi
    fi
    echo ''
    echo "!!"
    echo "!! DONE"
    echo "!!"
    echo ''
fi
