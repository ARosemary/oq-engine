#!/usr/bin/python
# vim: tabstop=4 shiftwidth=4 softtabstop=4

"""Conversion utilities for OpenGEM

Expects to receive:
    Input path
    Input format (as name of module)
    Output path
    Output format (as name of module)
    Config file with parsing settings (if needed)
    
It can receive these either through gflags (current functionality), or
through a configuration file.
"""

import os
import sys

# this is a hack so that it is easier to test these scripts,
# it will add the proper directories to the path so that 
# this script can be run from a checkout
if os.path.exists(os.path.join(os.path.dirname(os.path.dirname(__file__)),
                  'opengem')):
    sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))

from opengem import flags
from opengem import logs


flags.DEFINE_string('convert_input', None, 'Input file path for Conversion')
flags.DEFINE_string('convert_type', 'NSHMP',
                    'Format of input data')
flags.DEFINE_string('convert_output', None, 'Output file path for Conversion')
flags.DEFINE_string('target_type', 'NRML',
                    'Format of output data')

def convert(input_path, input_type, output_path, output_type):
    pass


if __name__ == '__main__':
    args = FLAGS(sys.argv)
    logs.init_logs()
    
    convert(FLAGS.convert_input, FLAGS.convert_type, 
            FLAGS.convert_output, FLAGS.target_type)