#!/bin/bash

which pylint >/dev/null 2>&1
if [ $? -ne 0 ]
then
    echo "Cannot find pylint .. Is it installed?"
    exit 1
fi

git branch >/dev/null 2>&1
if [ $? -ne 0 ]
then
    if [ -z "$OQ_ROOT" ]
    then
        echo "This is not a git repository. Please cd to your OpenQuake"
        echo "repository."
        echo "Alternatively set the OQ_ROOT environment variable to contain"
        echo "the repository path and the script will use that."
        exit 2
    else
        cd $OQ_ROOT
    fi
fi

other_remote=""
other_reference="master"

branch_remote=""
branch_reference=`git branch | awk '/^\*/ { print $2 }'`

fetch_remotes=1
use_colordiff=0

branch_name=""

git diff --quiet HEAD
if [ $? -ne 0 ]
then
    echo "Your branch has uncommitted changes. Please commit first."
    exit 3
fi

for i in $*
do
    case $i in
    --other=*)
        other=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
        other_remote=`dirname $other`
        if [ $other_remote == "." ]
        then
            other_remote=""
        fi
        other_reference=`basename $other`
        ;;
    --branch=*)
        branch=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
        branch_remote=`dirname $branch`
        if [ $branch_remote == "." ]
        then
            branch_remote=""
        fi
        branch_reference=`basename $branch`
        branch_name="$branch"
        ;;
    --pull=*)
        pull=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
        curl -s https://github.com/gem/openquake/pull/$pull >/tmp/pull.$pull
        if [ $? -ne 0 ]
        then
            echo "curl failed to get https://github.com/gem/openquake/pull/$pull"
            exit 4
        fi
        branch=`awk '/merge [0-9]+ commits into [a-z]+:[a-z]+/ {split($13, A, /[:"]/); printf("%s/%s", A[1], A[2]);}' /tmp/pull.$pull`
        branch_name="$branch"
        git_user=`dirname $branch`
        branch_remote=`git remote -v | awk "/$git_user.+fetch.$/ {print \\$1}"`
        if [ -z "$branch_remote" ]
        then
            echo "You don't have a remote repository defined for git user $git_user. Plase add one and try again."
            exit 5
        fi
        branch_reference=`basename $branch`
        ;;
    --other-remote=*)
        other_remote=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
        ;;
    --other-reference=*)
        other_reference=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
        ;;
    --branch-remote=*)
        branch_remote=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
        ;;
    --branch-reference=*)
        branch_reference=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
        ;;
    --fetch-remotes)
        fetch_remotes=1
        ;;
    --colordiff)
        use_colordiff=1
        ;;
    *)
        echo "Uknown option: " $i
        exit 6
        ;;
    esac
done


if [ -z "$branch_name" ]
then
    if [ ! -z "$branch_remote" ]
    then
        branch_name="$branch_remote/$branch_reference"
    else
        branch_name="$branch_reference"
    fi
fi

# Update remotes

if [ $fetch_remotes -eq 1 ]
then
    echo "Fetching remotes.."
    if [ ! -z "$other_remote" ]
    then
        git fetch $other_remote
        if [ $? -ne 0 ]
        then
            echo "git failed to fetch $other_remote"
            exit 7
        fi
    fi
    if [ ! -z "$branch_remote" ]
    then
        git fetch $branch_remote
        if [ $? -ne 0 ]
        then
            echo "git failed to fetch $branch_remote"
            exit 8
        fi
    fi
fi

git co master
git branch -D ba >/dev/null 2>&1
git branch -D bb >/dev/null 2>&1

if [ ! -z "$other_remote" ]
then
    git co -b ba $other_remote/$other_reference
    if [ $? -ne 0 ]
    then
        echo "git failed to create a tracking branch for $other_remote/$other_reference"
        exit 9
    fi
    other_branch="ba"
else
    other_branch="$other_reference"
    git co $other_branch 
fi

echo "Running pylint on $other_branch.."
pylint -f parseable -dI -rn --disable=E1101,E0611 openquake | sed -e 's/:[0-9][0-9]*:/:/' > /tmp/pl.a

if [ ! -z "$branch_remote" ]
then
    git co -b bb $branch_remote/$branch_reference
    if [ $? -ne 0 ]
    then
        echo "git failed to create a tracking branch for $branch_remote/$branch_reference"
        exit 10
    fi
    branch_branch="bb"
else
    branch_branch="$branch_reference"
    git co $branch_branch 
fi

echo "Running pylint on $branch_name.."
pylint -f parseable -dI -rn --disable=E1101,E0611 openquake | sed -e 's/:[0-9][0-9]*:/:/' > /tmp/pl.b

echo ""
diff -uw /tmp/pl.a /tmp/pl.b > /tmp/pl.diff
if [ $? -ne 0 ]
then
    added_issues=`cat /tmp/pl.diff | grep -v '^+++' | grep '^+' | wc -l`
    if [ $added_issues -gt 0 ]
    then
        echo "!! $branch_name adds $added_issues pylint issues.."
        cat /tmp/pl.diff
    else
        fixed_issues=`cat /tmp/pl.diff | grep -v '^---' | grep '^-' | wc -l`
        echo "++ $branch_name fixes $fixed_issues existing pylint issues.."
    fi
else
    echo "** $branch_name introduces no new pylint issues.."
fi
echo ""
echo "Press <enter> to continue"
read
if [ $use_colordiff -ne 0 ]
then
    git diff $other_branch...$branch_branch | colordiff | less -R
else
    git diff $other_branch...$branch_branch
fi
